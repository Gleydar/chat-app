:host {
    display: flex;
    width: inherit;
    height: inherit;

    flex-direction: column;
    flex-wrap: nowrap;

    align-items: stretch;
}

.avatar {
    position: relative;
}

.avatar-hover {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 9;
    cursor: pointer;

    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

    transition: 200ms background-color ease-out;

    border-radius: 100%;

    & > * {
        display: none;
    }

    &:hover {
        background-color: rgba(0, 0, 0, 0.4);

        & > * {
            display: block;
        }
    }
}

.profile-info {
    flex: 0 0 auto;
    padding: 1.5em 0;
}

.profile-avatar {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}

span.editable {
    padding: 0.2em 0.3em;
    margin: 0.1em 0.2em;
    font-size: 2.0em;
    cursor: pointer;
    border-radius: 0.2em;

    &.editing {
        cursor: text;
    }
}

span.status-editable {
    line-height: 1.5em;

    &:before, &:after {
        font-size: 1.5em;
    }

    &:before {
        content: '\0000bb';
    }

    &:after {
        content: '\0000ab';
    }
}

.status-layout {
    margin: 2.0em 0.5em;
    text-align: center;

    & .status-label {
        font-size: 2.0em;
        font-weight: bold;
    }
}

.resource-overview {
    flex: 1 1 auto;
    position: relative;
}

.resources-headline {
    padding: 0 1.0em;
}

@mixin profile-theme($theme) {
    $background: map-get($theme, background);

    span.editable {
        &:hover {
            background-color: mat-color($background, dimmed);
        }

        &.editing {
            background-color: mat-color($background, contrast);
            color: mat-color($background, background);
        }
    }

    .resources-headline {
        border-bottom: 2px solid rgba(mat-color($background, contrast), 0.1);
    }
}
